<launch>
	<arg name="port" default="/dev/ttyUSB0" />
	<arg name="baud" default="115200" />
	<arg name="rviz" default="true" doc="Set true if you want RViz." />
	<arg name="moveit" default="false" doc="Set true if you want Moveit-based plan." />

	<arg name="camera" default="camera"/>
	<arg name="rgb_processing"                  default="true"/>
	<arg name="ir_processing"                   default="true"/>
	<arg name="depth_registration"              default="true" />
	<arg name="depth_processing"                default="true"/>
	<arg name="depth_registered_processing"     default="true"/>
	<arg name="disparity_processing"            default="true"/>
	<arg name="disparity_registered_processing" default="true"/>
	<arg name="hw_registered_processing"        default="true" />
	<arg name="sw_registered_processing"        default="true" />

	<arg name="comb_mode" default="true"/>
	<arg name="orientation_mode" default="true"/>
	<arg name="traj_mode" default="true"/>
	<arg name="mask" default="true"/>

	
	<arg name="urdf_path" default="$(find mycobot_description)/urdf/mycobot/mycobot_for_hair.urdf.xacro"/>
	<!-- <arg name="model" default="$(find mycobot_description)/urdf/mycobot/mycobot.urdf.xacro"/> -->

	<arg name="rvizconfig" default="$(find mycobot_280)/config/mycobot.rviz" />
	<arg name="gui" default="false" />

	<!-- <param name="robot_description" command="$(find xacro)/xacro -\-inorder $(arg model)" /> -->

	<!-- Combinejoin values to TF -->
	<!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- Show in Rviz -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" if="$(arg rviz)" />
	
	<!-- Moveit -->
	<include if="$(arg moveit)" file="$(find mycobot_280_moveit)/launch/move_group.launch" >
	  <arg name="info" value="true" />
	</include>

	<!-- <include file="$(find mycobot_communication)/launch/communication_service.launch"> -->
	<!--   <arg name="port" value="$(arg port)" />	 -->
	<!--   <arg name="baud" value="$(arg baud)" />	 -->
	<!-- </include> -->
	<include file="$(find mycobot_communication)/launch/mycobot_interface.launch">
	  <arg name="port" value="$(arg port)" />
	  <arg name="baud" value="$(arg baud)" />
          <arg name="urdf_path" value="$(arg urdf_path)" />

	</include>

	<node name="real_listener" pkg="mycobot_280" type="listen_real.py" />

	<!-- <node type="serial_node.py" pkg="rosserial_python" name="comb_serial_node" if="$(arg comb_mode)"> -->
	<!--   <param name="~port" value="/dev/ttyACM0"/> -->
	<!-- </node> -->

	<node type="orientation_ros_gpu.py" pkg="mycobot_280" name="hair_orientation" if="$(arg orientation_mode)">	</node>
	<node type="ransac_ros_.py" pkg="mycobot_280" name="trajectory_for_comb_node" if="$(arg traj_mode)">	</node>

	<node type="hair_segmentation_node_v2.py" pkg="mycobot_280" name="hair_pcl_mask" if="$(arg mask)">
	  <remap from="~input" to= "$(arg camera)/rgb/image_rect_color"/>
	</node>
	<include file="$(find openni_launch)/launch/openni.launch">
	  <arg name="camera"                          value="$(arg camera)"/>
	  <arg name="depth_registration"              value="$(arg depth_registration"/>
	  <arg name="rgb_processing"                  value="$(arg rgb_processing)"/>
	  <arg name="ir_processing"                   value="$(arg ir_processing)"/>
	  <arg name="depth_processing"                value="$(arg depth_processing)"/>
	  <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)"/>
	  <arg name="disparity_processing"            value="$(arg disparity_processing)"/>
	  <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)"/>
	  <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)"/>
	  <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)"/>
	</include>
</launch>
